{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getMenus } from \"@/services/HandlerGetMenus\";\nimport { deleteMenu } from \"@/services/HandlerDeleteMenu\";\nimport { postMenu } from \"@/services/HandlerPostMenu\";\nimport { updateMenu } from \"@/services/HandlerPutMenu\";\nexport default {\n  name: \"RestPage\",\n  data() {\n    return {\n      menuItems: [],\n      selectedItem: null,\n      editItem: null,\n      selectedIndex: null,\n      newMenu: {\n        menu_name: \"\",\n        menu_description: \"\",\n        menu_price: 0,\n        article_list: [\"\"]\n      },\n      isAddingMenu: false // Propriété pour suivre l'état du formulaire d'ajout\n    };\n  },\n  async mounted() {\n    try {\n      this.menuItems = await getMenus();\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des menus:\", error);\n    }\n  },\n  methods: {\n    async deleteMenu(item) {\n      if (confirm(`Êtes-vous sûr de vouloir supprimer le menu: ${item.menu_name}?`)) {\n        try {\n          await deleteMenu(item._id);\n          this.menuItems = this.menuItems.filter(menu => menu._id !== item._id);\n        } catch (error) {\n          console.error(\"Erreur lors de la suppression du menu:\", error);\n        }\n      }\n    },\n    async addMenu() {\n      try {\n        //need to call user => restaurant_id\n        this.newMenu.restaurant_id = \"1\";\n        const createdMenu = await postMenu(this.newMenu);\n        this.menuItems.push(createdMenu);\n        this.resetNewMenu();\n        this.isAddingMenu = false;\n      } catch (error) {\n        console.error(\"Erreur lors de la création du menu:\", error);\n      }\n    },\n    resetNewMenu() {\n      this.newMenu = {\n        menu_name: \"\",\n        menu_description: \"\",\n        menu_price: 0,\n        article_list: [\"\"]\n      };\n    },\n    selectMenuForEdit(item, index) {\n      this.selectedItem = item;\n      this.editItem = {\n        ...item\n      };\n      this.selectedIndex = index;\n    },\n    async updateMenu() {\n      try {\n        await updateMenu(this.editItem._id, this.editItem);\n        this.menuItems.splice(this.selectedIndex, 1, this.editItem);\n        this.selectedItem = null;\n        this.editItem = null;\n        this.selectedIndex = null;\n      } catch (error) {\n        console.error(\"Erreur lors de la modification du menu:\", error);\n      }\n    },\n    cancelEditMenu() {\n      this.selectedItem = null;\n      this.editItem = null;\n      this.selectedIndex = null;\n    },\n    addArticle() {\n      this.editItem.article_list.push(\"\");\n    },\n    removeArticle(index) {\n      this.editItem.article_list.splice(index, 1);\n    },\n    addNewArticle() {\n      this.newMenu.article_list.push(\"\");\n    },\n    removeNewArticle(index) {\n      this.newMenu.article_list.splice(index, 1);\n    },\n    showAddMenuForm() {\n      this.isAddingMenu = true;\n    },\n    cancelAddMenu() {\n      this.isAddingMenu = false;\n      this.resetNewMenu();\n    }\n  }\n};","map":{"version":3,"names":["getMenus","deleteMenu","postMenu","updateMenu","name","data","menuItems","selectedItem","editItem","selectedIndex","newMenu","menu_name","menu_description","menu_price","article_list","isAddingMenu","mounted","error","console","methods","item","confirm","_id","filter","menu","addMenu","restaurant_id","createdMenu","push","resetNewMenu","selectMenuForEdit","index","splice","cancelEditMenu","addArticle","removeArticle","addNewArticle","removeNewArticle","showAddMenuForm","cancelAddMenu"],"sources":["/app/src/scripts/RestPage.js"],"sourcesContent":["import { getMenus } from \"@/services/HandlerGetMenus\";\r\nimport { deleteMenu } from \"@/services/HandlerDeleteMenu\";\r\nimport { postMenu } from \"@/services/HandlerPostMenu\";\r\nimport { updateMenu } from \"@/services/HandlerPutMenu\";\r\n\r\nexport default {\r\n  name: \"RestPage\",\r\n  data() {\r\n    return {\r\n      menuItems: [],\r\n      selectedItem: null,\r\n      editItem: null,\r\n      selectedIndex: null,\r\n      newMenu: {\r\n        menu_name: \"\",\r\n        menu_description: \"\",\r\n        menu_price: 0,\r\n        article_list: [\"\"],\r\n      },\r\n      isAddingMenu: false, // Propriété pour suivre l'état du formulaire d'ajout\r\n    };\r\n  },\r\n  async mounted() {\r\n    try {\r\n      this.menuItems = await getMenus();\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des menus:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    async deleteMenu(item) {\r\n      if (\r\n        confirm(\r\n          `Êtes-vous sûr de vouloir supprimer le menu: ${item.menu_name}?`\r\n        )\r\n      ) {\r\n        try {\r\n          await deleteMenu(item._id);\r\n          this.menuItems = this.menuItems.filter(\r\n            (menu) => menu._id !== item._id\r\n          );\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la suppression du menu:\", error);\r\n        }\r\n      }\r\n    },\r\n    async addMenu() {\r\n      try {\r\n        //need to call user => restaurant_id\r\n        this.newMenu.restaurant_id = \"1\";\r\n        const createdMenu = await postMenu(this.newMenu);\r\n        this.menuItems.push(createdMenu);\r\n        this.resetNewMenu();\r\n        this.isAddingMenu = false;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la création du menu:\", error);\r\n      }\r\n    },\r\n    resetNewMenu() {\r\n      this.newMenu = {\r\n        menu_name: \"\",\r\n        menu_description: \"\",\r\n        menu_price: 0,\r\n        article_list: [\"\"],\r\n      };\r\n    },\r\n    selectMenuForEdit(item, index) {\r\n      this.selectedItem = item;\r\n      this.editItem = { ...item };\r\n      this.selectedIndex = index;\r\n    },\r\n    async updateMenu() {\r\n      try {\r\n        await updateMenu(this.editItem._id, this.editItem);\r\n        this.menuItems.splice(this.selectedIndex, 1, this.editItem);\r\n        this.selectedItem = null;\r\n        this.editItem = null;\r\n        this.selectedIndex = null;\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la modification du menu:\", error);\r\n      }\r\n    },\r\n    cancelEditMenu() {\r\n      this.selectedItem = null;\r\n      this.editItem = null;\r\n      this.selectedIndex = null;\r\n    },\r\n    addArticle() {\r\n      this.editItem.article_list.push(\"\");\r\n    },\r\n    removeArticle(index) {\r\n      this.editItem.article_list.splice(index, 1);\r\n    },\r\n    addNewArticle() {\r\n      this.newMenu.article_list.push(\"\");\r\n    },\r\n    removeNewArticle(index) {\r\n      this.newMenu.article_list.splice(index, 1);\r\n    },\r\n    showAddMenuForm() {\r\n      this.isAddingMenu = true;\r\n    },\r\n    cancelAddMenu() {\r\n      this.isAddingMenu = false;\r\n      this.resetNewMenu();\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}